
siege -c 1 -d 5s -t 5m 'http://localhost:8080/crime/HA74PD?date=2018-08'



curl http://localhost:8081/crime/HA74PD?date=2018-08

[iapetos.core :as prometheus]
[iapetos.collector.jvm :as jvm]
[iapetos.collector.ring :as ring]


(defonce registry
         (-> (prometheus/collector-registry)
             jvm/initialize
             ring/initialize))


(defn wrap-metrics [app]
 (ring/wrap-metrics app
                    registry
                    {:path "/metrics"
                     ; make sure we are not creating a metric for every postcode
                     ; this would still create metrics for not existing paths
                     :path-fn #(re-find #"^/[^/]+" (:uri %))}))

wrap-metrics


curl http://localhost:8081/metrics
watch 'curl http://localhost:8081/metrics | grep http_request_latency_seconds_'
siege -c 1 -d 2s -t 5m 'http://localhost:8081/crime/HA74PD?date=2018-08'


             (prometheus/register
               (prometheus/summary :clojure-prometheus-demo/crimes-lookup-seconds)
               (prometheus/summary :clojure-prometheus-demo/postcode-lookup-seconds))


               (prometheus/with-duration
                 (registry :clojure-prometheus-demo/crimes-lookup-seconds)


                 (prometheus/with-duration
                   (registry :clojure-prometheus-demo/postcode-lookup-seconds)
